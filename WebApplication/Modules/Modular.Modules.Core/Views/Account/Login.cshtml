@model Modular.Modules.Core.ViewModels.Account.LoginViewModel

@inject SignInManager<User> SignInManager

@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.OpenIdConnect

@{
    ViewData["Title"] = "Log in";
    string bg = string.Empty;

    if (Context.Request.Path.Value.ToString().ToLower().Contains("margarita"))
    {
        bg = "background-image: url(/images/slide02.jpg);";
    }
    else
    {
        bg = "background-color: #2E70B2;";
    }
}
<style>
    .input-validation-error {
        border: 1px solid #FF8B8B !important
    }

    .main-elevated {
        padding-top: 10px !important
    }

    @@media screen and (max-width: 767px) {
        /* Hide captions */
        .page-hero {
            height: 160px
        }
    }

    @@media screen and (min-width: 768px) {
        /* Hide captions */
        .page-hero {
            height: 130px
        }
    }
</style>
<div class="page-hero" style="z-index:0; @bg"></div>

<main class="main main-elevated">
    <div class="container">
        <div class="row content-wrapper d-flex align-items-stretch auth auth-img-bg">
            <div class="col-lg-6 align-items-center justify-content-center">
                <div class="auth-form-transparent text-left p-3">

                    <h4>Acceso!</h4>
                    <h6 class="font-weight-light">Accede a nuestro sistema con tu usuario o email!</h6>
                    <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">

                        <hr />
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <div class="form-group row">
                            <label asp-for="Email" class="col-md-4 col-form-label">["Email"]</label>
                            <div class="col-md-8">
                                <input asp-for="Email" class="form-control" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label asp-for="Password" class="col-md-4 col-form-label">["Password"]</label>
                            <div class="col-md-8">
                                <input asp-for="Password" class="form-control" />
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="offset-md-4 col-md-8">
                                <div class="checkbox">
                                    <label asp-for="RememberMe">
                                        <input asp-for="RememberMe" />
                                        ["Remember me?"]
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="offset-md-4 col-md-8">
                                <button type="submit" class="btn btn-primary">["Log in"]</button>
                            </div>
                        </div>
                        <p>
                            <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">["Register as a new user?"]</a>
                        </p>
                        <p>
                            <a asp-action="ForgotPassword">["Forgot your password?"]</a>
                        </p>
                    </form>
                </div>
            </div>

            <div class="col-lg-6 align-items-center justify-content-center">
                <div class="auth-form-transparent text-left p-3">
                    <h4>["Use another service to log in."]</h4>
                    <hr />
                    @{
                        try
                        {
                            var schemes = await SignInManager.GetExternalAuthenticationSchemesAsync();
                            var loginProviders = schemes.Where(scheme => scheme.DisplayName != OpenIdConnectDefaults.AuthenticationScheme).ToList();
                            if (loginProviders.Count == 0)
                            {
                                <div>
                                    <p>
                                        There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                        for details on setting up this ASP.NET application to support logging in via external services.
                                    </p>
                                </div>
                            }
                            else
                            {
                                <form asp-area="Core" asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                                    <div>
                                        <p>
                                            @foreach (var provider in loginProviders)
                                            {
                                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
                                            }
                                        </p>
                                    </div>
                                </form>
                            }
                        }
                        catch (Exception ex)
                        {

                        }
                    }
                </div>

            </div>


        </div>
    </div>
</main>




@section scripts {
    <partial name="_ValidationScriptsPartial" />
}
